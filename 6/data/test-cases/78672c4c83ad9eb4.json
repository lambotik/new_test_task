{
  "uid" : "78672c4c83ad9eb4",
  "name" : "test_negative_login",
  "fullName" : "test_ui.test_ui_page.TestLoginPage#test_negative_login",
  "historyId" : "54b5c4bfb4eac8a3b161a8f5475079d3",
  "time" : {
    "start" : 1725468019215,
    "stop" : 1725468019215,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=128.0.6613.113)\nStacktrace:\n#0 0x55f2279088da <unknown>\n#1 0x55f2275d6e50 <unknown>\n#2 0x55f2275bee20 <unknown>\n#3 0x55f2275beb0d <unknown>\n#4 0x55f2275bcb11 <unknown>\n#5 0x55f2275bd31f <unknown>\n#6 0x55f2275cce3b <unknown>\n#7 0x55f2275e3204 <unknown>\n#8 0x55f2275e874b <unknown>\n#9 0x55f2275bda2e <unknown>\n#10 0x55f2275e3059 <unknown>\n#11 0x55f22766988f <unknown>\n#12 0x55f22764b233 <unknown>\n#13 0x55f227619093 <unknown>\n#14 0x55f22761a09e <unknown>\n#15 0x55f2278cfb3b <unknown>\n#16 0x55f2278d3af1 <unknown>\n#17 0x55f2278bb705 <unknown>\n#18 0x55f2278d4662 <unknown>\n#19 0x55f2278a08df <unknown>\n#20 0x55f2278f76d8 <unknown>\n#21 0x55f2278f78a2 <unknown>\n#22 0x55f2279076cc <unknown>\n#23 0x7f2b2da94ac3 <unknown>",
  "statusTrace" : "@pytest.fixture(scope='class')\n    def driver():\n        print('\\nstart browser...')\n        chrome_options = Options()\n        if 'CI' in os.environ:\n            chrome_options.add_argument('--headless')\n            driver = webdriver.Chrome(options=chrome_options)\n>           driver.set_window_size(1920, 1080)\n\ntest_ui/conftest.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:858: in set_window_size\n    self.set_window_rect(width=int(width), height=int(height))\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:939: in set_window_rect\n    return self.execute(Command.SET_WINDOW_RECT, {\"x\": x, \"y\": y, \"width\": width, \"height\": height})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6a75879dc0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55f2278f78a2 \\\\u003Cunknown>\\\\n#22 0x55f2279076cc \\\\u003Cunknown>\\\\n#23 0x7f2b2da94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome=128.0.6613.113)\nE       Stacktrace:\nE       #0 0x55f2279088da <unknown>\nE       #1 0x55f2275d6e50 <unknown>\nE       #2 0x55f2275bee20 <unknown>\nE       #3 0x55f2275beb0d <unknown>\nE       #4 0x55f2275bcb11 <unknown>\nE       #5 0x55f2275bd31f <unknown>\nE       #6 0x55f2275cce3b <unknown>\nE       #7 0x55f2275e3204 <unknown>\nE       #8 0x55f2275e874b <unknown>\nE       #9 0x55f2275bda2e <unknown>\nE       #10 0x55f2275e3059 <unknown>\nE       #11 0x55f22766988f <unknown>\nE       #12 0x55f22764b233 <unknown>\nE       #13 0x55f227619093 <unknown>\nE       #14 0x55f22761a09e <unknown>\nE       #15 0x55f2278cfb3b <unknown>\nE       #16 0x55f2278d3af1 <unknown>\nE       #17 0x55f2278bb705 <unknown>\nE       #18 0x55f2278d4662 <unknown>\nE       #19 0x55f2278a08df <unknown>\nE       #20 0x55f2278f76d8 <unknown>\nE       #21 0x55f2278f78a2 <unknown>\nE       #22 0x55f2279076cc <unknown>\nE       #23 0x7f2b2da94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1725467655839,
      "stop" : 1725468019180,
      "duration" : 363341
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=128.0.6613.113)\nStacktrace:\n#0 0x55f2279088da <unknown>\n#1 0x55f2275d6e50 <unknown>\n#2 0x55f2275bee20 <unknown>\n#3 0x55f2275beb0d <unknown>\n#4 0x55f2275bcb11 <unknown>\n#5 0x55f2275bd31f <unknown>\n#6 0x55f2275cce3b <unknown>\n#7 0x55f2275e3204 <unknown>\n#8 0x55f2275e874b <unknown>\n#9 0x55f2275bda2e <unknown>\n#10 0x55f2275e3059 <unknown>\n#11 0x55f22766988f <unknown>\n#12 0x55f22764b233 <unknown>\n#13 0x55f227619093 <unknown>\n#14 0x55f22761a09e <unknown>\n#15 0x55f2278cfb3b <unknown>\n#16 0x55f2278d3af1 <unknown>\n#17 0x55f2278bb705 <unknown>\n#18 0x55f2278d4662 <unknown>\n#19 0x55f2278a08df <unknown>\n#20 0x55f2278f76d8 <unknown>\n#21 0x55f2278f78a2 <unknown>\n#22 0x55f2279076cc <unknown>\n#23 0x7f2b2da94ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/new_test_task/new_test_task/test_ui/conftest.py\", line 17, in driver\n    driver.set_window_size(1920, 1080)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 858, in set_window_size\n    self.set_window_rect(width=int(width), height=int(height))\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 939, in set_window_rect\n    return self.execute(Command.SET_WINDOW_RECT, {\"x\": x, \"y\": y, \"width\": width, \"height\": height})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "UI."
  }, {
    "name" : "parentSuite",
    "value" : "test_ui"
  }, {
    "name" : "suite",
    "value" : "test_ui_page"
  }, {
    "name" : "subSuite",
    "value" : "TestLoginPage"
  }, {
    "name" : "host",
    "value" : "fv-az692-847"
  }, {
    "name" : "thread",
    "value" : "2203-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_ui.test_ui_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "b99c0a8a45b9faa3",
        "reportUrl" : "https://lambotik.github.io/new_test_task/5//#testresult/b99c0a8a45b9faa3",
        "status" : "passed",
        "time" : {
          "start" : 1725461888239,
          "stop" : 1725461888594,
          "duration" : 355
        }
      }, {
        "uid" : "a25180b63a0a2e5b",
        "reportUrl" : "https://lambotik.github.io/new_test_task/4//#testresult/a25180b63a0a2e5b",
        "status" : "passed",
        "time" : {
          "start" : 1725461233694,
          "stop" : 1725461233992,
          "duration" : 298
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "78672c4c83ad9eb4.json",
  "parameterValues" : [ ]
}